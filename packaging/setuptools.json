{
    "author": "Kyle Lahnakoski",
    "author_email": "kyle@lahnakoski.com",
    "classifiers": [
        "Development Status :: 5 - Production/Stable",
        "Topic :: Software Development :: Libraries",
        "Topic :: Software Development :: Libraries :: Python Modules",
        "License :: OSI Approved :: Mozilla Public License 2.0 (MPL 2.0)",
        "Programming Language :: Python :: 3.8",
        "Programming Language :: Python :: 3.9",
        "Programming Language :: Python :: 3.10",
        "Programming Language :: Python :: 3.11",
        "Programming Language :: Python :: 3.12"
    ],
    "description": "More future! Make Python 2/3 compatibility a bit easier",
    "install_requires": [],
    "license": "MPL 2.0",
    "long_description": {
        "$concat": [
            "# More Future!",
            "",
            "For old code written against Python2, plus some tiny useful functions",
            "",
            "## Recent Changes",
            "",
            "**December 2022** - No longer points to Python2 modules. ",
            "",
            "",
            "## Description",
            "",
            "### Problem ",
            "",
            "`future` or `six` are hard to use: It is easy to google how to import an object in Python2, or Python3, but finding the full path to the same in these compatibility libraries is difficult. ",
            "",
            "## Solution",
            "",
            "All the modules and types required for compatibility are put into the `mo-future` top-level module so they are  easy to find.",
            "",
            "",
            "### Flat namespace",
            "",
            "Instead of ",
            "",
            "```python",
            "    from future.utils import text",
            "```",
            "",
            "you get the same, but without having to discover what sub-module the `text` is hiding:  ",
            "",
            "```python",
            "    from mo_future import text",
            "```",
            "",
            "",
            "### Simpler imports",
            "",
            "Instead of writing conditional imports like ",
            "",
            "```python",
            "    try:",
            "        from io import StringIO",
            "    except:",
            "        from StringIO import StringIO",
            "```",
            "",
            "or ",
            "",
            "```python",
            "    if PY3:",
            "        from io import StringIO",
            "    else:",
            "        from StringIO import StringIO",
            "```",
            "",
            "you can use `mo-future`:",
            "",
            "```python",
            "    from mo_future import StringIO",
            "```",
            "",
            "",
            ""
        ],
        "separator": "\n"
    },
    "long_description_content_type": "text/markdown",
    "name": "mo-future",
    "packages": ["mo_future"],
    "url": "https://github.com/klahnakoski/mo-future",
    "version": "7.476.24007"
}